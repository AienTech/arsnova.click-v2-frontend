stages:
  - install
  - test
  - build
  - assets
  - deploy

# Cache modules in between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

install_node_modules:
  stage: install
  tags:
    - nodejs
  script:
    - npm install

ts_lint:
  stage: test
  tags:
    - nodejs
  script:
    - npm install
    - node_modules/tslint/bin/tslint -c tslint.json -p tsconfig.json

npm_test:
  stage: test
  allow_failure: true
  tags:
    - nodejs
  script:
    - curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add
    - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
    - apt-get -y update
    - apt-get -y install --allow-unauthenticated google-chrome-stable
    - npm install
    - npm test

build:
  stage: build
  only:
    - master
  tags:
    - nodejs
  script:
    - echo $STAGING_SERVER_ENDPOINTS > src/assets/serverEndpoint.json
    - npm install
    - npm install typescript@3.1.6
    - npm run build:SSR
  artifacts:
    paths:
      - dist

generate_assets:
  stage: assets
  only:
    - master
  tags:
    - nodejs
  dependencies:
    - build
  script:
    - npm install
    - cd dist
    - node server &
    - sleep 15s
    - cd browser/assets/jobs
    - node --experimental-modules GenerateImages.mjs --command=generateLogoImages
    - node --experimental-modules GenerateImages.mjs --command=generateFrontendPreview --host=http://localhost:4000
    - node GenerateMetaNodes.js --command=generateLinkImages --baseUrl=https://staging.arsnova.click
    - node GenerateMetaNodes.js --command=generateManifest --baseUrl=https://staging.arsnova.click
  artifacts:
    paths:
      - dist

deploy:
  stage: deploy
  only:
    - master
  tags:
    - rsync
  dependencies:
    - generate_assets
  script:
    - chmod -R a+rX,ug+w .
    - eval $(ssh-agent -s)
    - mkdir ~/.ssh
    - ssh-keyscan "$STAGING_FRONTEND_URL" >> ~/.ssh/known_hosts
    - ssh-add <(echo "$STAGING_SSH_PRIVATE_KEY")
    - rsync -rltgoDqv --delete -e "ssh" dist/* "$STAGING_FRONTEND_SCP_URL"
    - ssh $STAGING_SSH 'touch /home/arsnova/arsnova.click-v2/frontend/deploy.touch'
